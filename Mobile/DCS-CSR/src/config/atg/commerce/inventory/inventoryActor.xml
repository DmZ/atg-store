<?xml version="1.0" encoding="UTF-8"?>

<actor-template default-chain-id="lookupInventory"
  xsi:noNamespaceSchemaLocation="http://www.atg.com/xsds/actorChain_1.0.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <!-- outputs inventory status for a SKU at a specific location -->
  <actor-chain id="lookupInventory">
    <droplet id="inventory" name="/atg/commerce/inventory/InventoryLookup" var="inventoryLookup">
      <input name="itemId" value="${skuId ? skuId : param.skuId" />
      <input name="locationId" value="${locationId ? locationId : param.locationId}" />
      <oparam name="output">
        <output id="error" name="error" value="${inventoryLookup.error}" />
        <output id="inventoryInfo" name="inventoryInfo" value="${inventoryLookup.inventoryInfo}" />
      </oparam>
    </droplet>
  </actor-chain>
  
  <!-- outputs inventory info for all child SKUs of a product, 
    for the online (locationId=null) and specified location -->
  <actor-chain id="getInventoryBySkuForProductWithLocation">
    <!-- lookup product so we can iterate over child SKUs -->
    <droplet id="productLookup" name="/atg/commerce/catalog/ProductLookup" var="productLookup">
      <input name="id" value="${(productId != null) ? productId : param.productId}"/>
      <input name="filterByCatalog" value="${false}" />
      <input name="filterBySite" value="${false}" />
      <oparam name="output">
        <droplet id="forEach" name="/atg/dynamo/droplet/ForEach" var="forEach">
          <input name="array" value="${productLookup.element.childSKUs}" />
          <oparam name="output">
            <!-- inventory info for SKU at specified location -->
            <droplet id="inventory" name="/atg/commerce/inventory/InventoryLookup" var="inventoryLookup">
              <input name="itemId" value="${productLookup.element.childSKUs[forEach.index].repositoryId}" />
              <input name="locationId" value="${locationId ? locationId : param.locationId}" />
                <oparam name="output">
                  <output id="error" name="error" value="${inventoryLookup.error}" />
                  <output id="inventoryInfo" name="result.${inventoryLookup.itemId}.locationInventoryInfo" 
                    value="${inventoryLookup.inventoryInfo}" />
              </oparam>
            </droplet>
            <!-- inventory info for SKU at online (null) location -->
            <droplet id="inventory" name="/atg/commerce/inventory/InventoryLookup" var="inventoryLookup">
              <input name="itemId" value="${productLookup.element.childSKUs[forEach.index].repositoryId}" />
              <input name="locationId" value="${null}" />
              <oparam name="output">
                <output id="error" name="error" value="${inventoryLookup.error}" />
                <output id="inventoryInfo" name="result.${inventoryLookup.itemId}.onlineInventoryInfo" 
                  value="${inventoryLookup.inventoryInfo}" />
              </oparam>
            </droplet>
          </oparam>
        </droplet>
      </oparam>
    </droplet>
  </actor-chain>
  
  <!-- outputs the availability (both online and at a specified location id) for a shipping group -->
  <!-- params: shippingGroup, locationId -->
  <!-- output: onlineAvailability=(true/false), locationAvailability=(true/false) -->
  <actor-chain id="getAvailabilityForShippingGroup">
    <!-- iterate over the shipping group's commerce items -->
    <droplet id="forEach" name="/atg/dynamo/droplet/ForEach" var="forEach">
      <input name="array" value="${shippingGroup.commerceItemRelationships}" />
      <oparam name="outputStart">
        <set-var name="locationUnavailable" value="false"/>
        <set-var name="onlineUnavailable" value="false"/>
      </oparam>
      <oparam name="output">
        <!-- check that online location is greater than commerce item quantity, if not already unavailable -->
        <droplet id="compare" name="/atg/dynamo/droplet/Compare">
          <input name="obj1" value="${locationUnavailable}" />
          <input name="obj2" value="false" />
          <oparam name="equal">
            <droplet id="locationInventory" name="/atg/commerce/inventory/InventoryLookup" var="inventoryLookup">
              <input name="itemId" value="${forEach.element.commerceItem.catalogRefId}" />
              <input name="locationId" value="${locationId}" />
              <oparam name="output">
                <droplet id="compare" name="/atg/dynamo/droplet/Compare">
                  <input name="obj1" value="${inventoryLookup.inventoryInfo.stockLevel}" />
                  <input name="obj2" value="${forEach.element.quantity}" />
                  <oparam name="lessthan">
                    <set-var name="locationUnavailable" value="true"/>
                  </oparam>
                </droplet>
              </oparam>
            </droplet>
          </oparam>
       </droplet>
       <!-- check that online inventory is greater than commerce item quantity, if not already unavailable --> 
       <droplet id="compare" name="/atg/dynamo/droplet/Compare">
          <input name="obj1" value="${onlineUnavailable}" />
          <input name="obj2" value="false" />
          <oparam name="equal">
            <droplet id="locationInventory" name="/atg/commerce/inventory/InventoryLookup" var="inventoryLookup">
              <input name="itemId" value="${forEach.element.commerceItem.catalogRefId}" />
              <input name="locationId" value="${null}" />
              <oparam name="output">
                <droplet id="compare" name="/atg/dynamo/droplet/Compare">
                  <input name="obj1" value="${inventoryLookup.inventoryInfo.stockLevel}" />
                  <input name="obj2" value="${forEach.element.quantity}" />
                  <oparam name="lessthan">
                    <set-var name="onlineUnavailable" value="true"/>
                  </oparam>
                </droplet>
              </oparam>
            </droplet>
          </oparam>
        </droplet>    
      </oparam>
      <oparam name="outputEnd">
        <output id="onlineAvailable" name="onlineAvailable" value="${!onlineUnavailable}" />
        <output id="locationAvailable" name="locationAvailable" value="${!locationUnavailable}" />
      </oparam>
    </droplet>
  </actor-chain>
</actor-template>
<!-- @version $Id: //hosting-blueprint/B2CBlueprint/version/10.2.1/Mobile/DCS-CSR/config/atg/commerce/inventory/inventoryActor.xml#4 $$Change: 842324 $ -->