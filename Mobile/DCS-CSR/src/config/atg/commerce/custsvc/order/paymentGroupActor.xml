<?xml version="1.0" encoding="UTF-8"?>

<actor-template>

   <!-- Workaround for a bug in the bean filtering code.  We can't output map value that have a key
       beginning the with the '$' character, such is the case with store credit.  Therefore we output each map entry separately.-->
  <actor-chain id="getPaymentGroups" xml-combine="remove" />
  <actor-chain id="getPaymentGroups" transaction="TX_SUPPORTS">

    <droplet id="paymentGroupDroplet" name="/atg/commerce/custsvc/order/PaymentGroupDroplet"
      var="paymentGroupDropletParamStack">
      <input name="clear" value="${param.init == null ? init : param.init}" />
      <input name="paymentGroupTypes" value="${nucleus['/atg/commerce/custsvc/util/CSRConfigurator'].paymentGroupTypesToBeInitialized}" />
      <input name="initPaymentGroups" value="${param.init == null ? init : param.init}" />
      <input name="initBasedOnOrder" value="${param.init == null ? init : param.init}" />
      <input name="initOrderPayment" value="${param.init == null ? init : param.init}" />
      <input name="createAllPaymentInfos" value="true" />
      <oparam name="output">
        <droplet id="forEach" name="/atg/dynamo/droplet/ForEach" var="ForEach">
          <input name="array" value="${paymentGroupDropletParamStack.paymentGroups}" />
          <oparam name="output">
            <output id="paymentGroup${ForEach.index}" name="paymentGroups.${ForEach.index}" value="${ForEach.element}" />
            <output id="paymentGroup${ForEach.index}_nickname" name="paymentGroups.${ForEach.index}.nickname" value="${ForEach.key}" />
          </oparam>
        </droplet>
      </oparam>
    </droplet>
  </actor-chain>


   <!--  This chain is used to apply a single payment group. -->
  <actor-chain id="applyPaymentGroup" transaction="TX_SUPPORTS">
    <actor id="getCommerceIdentifierPaymentInfos" name="/atg/commerce/custsvc/order/PaymentGroupActor"
           chain-id="getCommerceIdentifierPaymentInfos" return-model-var="result">
    </actor>

    <droplet id="forEach" name="/atg/dynamo/droplet/ForEach" var="ForEach">
      <input name="array" value="${result.currentList}" />
      <oparam name="output">

        <droplet id="switch" name="/atg/dynamo/droplet/Switch" var="switch">
          <input name="value" value="${ForEach.element.paymentMethod eq param.nickname}" />
          <oparam name="true">
            <form id="paymentGroupFormHandler" name="/atg/commerce/custsvc/order/PaymentGroupFormHandler"
                  var="paymentGroupFormHandler" handle="applyPaymentGroups">
              <input name="suppressOrderAmountRemainingRelationship" value="true" priority="1000"/>
              <input name="currentList[${ForEach.index}].amount" value="${objectParam.cipi.amount}"/>
              <input name="currentList[${ForEach.index}].creditCardVerificationNumber" value="${objectParam.cipi.creditCardVerificationNumber}"/>
              <input name="applyPaymentGroupsErrorURL" value="/model/atg/commerce/custsvc/order/PaymentGroupActor/applyMultiplePaymentGroups-error"/>
              <input name="applyPaymentGroupsSuccessURL" value="/model/atg/commerce/custsvc/order/PaymentGroupActor/applyMultiplePaymentGroups-success"/>
            </form>
          </oparam>
        </droplet>

      </oparam>
    </droplet>    
  </actor-chain>

   <!--  This chain is used to remove all payment groups from an order. -->
  <actor-chain id="clearAllPayments" transaction="TX_SUPPORTS">
    <component id="paymentGroupManager" name="/atg/commerce/order/PaymentGroupManager" method="removeAllPaymentGroupsFromOrder">
	  <input name="order" class-name="atg.commerce.order.Order" index="0" value="${nucleus['/atg/commerce/custsvc/order/ShoppingCart'].current}"/>
	</component>
  </actor-chain>

</actor-template>
<!-- @version $Id: //hosting-blueprint/B2CBlueprint/version/10.2.1/EStore/config/atg/commerce/order/purchase/shippingGroupActor.xml#4 
  $$Change: 839316 $ -->